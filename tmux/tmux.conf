# vi:fdm=marker:fmr=[[[,]]]:ft=tmux

# server options [[[
# reset server options
set -u terminal-overrides
set -u terminal-features
set -u command-alias

set history-file "~/.tmux/history"

# make exiting a session a conscious action
set exit-unattached off

# terminal configuration [[[

# NOTE: i can't find a definitive list of reasons why (screen|tmux)-256color are supposed to be used instead
# of xterm-256color, so i'm just going to use tmux-256color since it already has support for italics and such.
#
# gunzip https://invisible-island.net/datafiles/current/terminfo.src.gz
# /usr/bin/tic -xe tmux-256color terminfo.src
#
# also see: https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
set default-terminal "alacritty"

# turn on true color support (set overrides based on alacritty)
set -a terminal-overrides ",tmux*:Tc"
# ,initc@,colors#0x1000000,pairs#0x7FFF"
# set -a terminal-overrides ",tmux*:setab=\E[%?%p1%{8}%<%t4%p1%d%e48\:2\:\:%p1%{65536}%/%d\:%p1%{256}%/%{255}%&%d\:%p1%{255}%&%d%;m"
# set -a terminal-overrides ",tmux*:setaf=\E[%?%p1%{8}%<%t3%p1%d%e38\:2\:\:%p1%{65536}%/%d\:%p1%{256}%/%{255}%&%d\:%p1%{255}%&%d%;m

# set -a terminal-features ",tmux*:RGB"

# it#4

# screen uses escape codes differently (namely with standout)
# set -ga terminal-overrides ",screen*:sitm=\E[3m:ritm=\E[23m:smso@:rmso@"
# set -a terminal-overrides ",screen*:ZH=\e[3m:ZR=\e[23m"
# set -a terminal-overrides ",screen*:so=\e[7m:se=\e[27m"
# set -a terminal-overrides ",screen*:ZH=\E[3m:ZR=\E[23m"
# set -a terminal-features ",screen*:256:RGB:title:mouse:ccolour:cstyle:strikethrough:usstyle"
# set -a terminal-overrides ",tmux*:smul=\E[4:1m:rmul\E[4:0m:smulx=\E[4:%p1%dm:rmulx=\E[4:0m"
# set -a terminal-overrides ",tmux*:Smul=\E[4:1m:Rmul\E[4:0m:Smulx=\E[4:%p1%dm:Rmulx=\E[4:0m"
# set -a terminal-features ",tmux*:RGB:title:cstyle:usstyle"
# :title:mouse:ccolour:cstyle:strikethrough:usstyle"
# set -a terminal-features ",xterm*:256:RGB:title:mouse:ccolour:cstyle:strikethrough:usstyle"

# NOTE to set the cursor color: echo -ne "\x1b]12;#00ff00"

# other interesting terminal features
#
# Dsbp,Enbp: bracketed paste (i.e. paste to vim without it formatting
# https://en.wikipedia.org/wiki/Bracketed-paste)
#
# Dsfcs,Enfcs: report to the terminal when it has focus
#
# Rect: terminal supports fill rect DECFRA: https://terminalguide.namepad.de/seq/csi_sx_t_dollar/
#
# Smol: overline attribute
# Smulx: styled underscore (x: 0=none, 1=normal, 2=double, 3=curly, 4=dotted, 5=dashed)
# Setulc, olc: underscore color, overline color
#
# Ss, Se: cursor style

# use the clipboard for copying
set set-clipboard on

# set a shorter time for input sequences
set escape-time 0

# command aliases for utility
set -a command-alias ",zoom=resize-pane -Z"
# ]]]

# ]]]

# session options [[[
# bind to ctrl-a
unbind C-b
set -g prefix C-a

# enable lots of scrollback
set -g history-limit 50000

set -g base-index 0
set -g destroy-unattached off
set -g display-time 1000
set -g renumber-windows on

# mouse support off: maybe come back to this though if you want wheel scrolling
set -g mouse off

# terminal titles
set -g set-titles on
set -g set-titles-string "#{?#{&&:#{!=:#{pane_title},#{host_short}},#{!=:#{pane_title},#{host}}},#{pane_title},#{pane_current_command}} @ (#{window_index},#{pane_index})"

# shell: override mac with brew install if desired
set -g default-command /usr/local/bin/zsh
set -g default-shell /usr/local/bin/zsh

# monitoring: activity, bell
set -g activity-action other
set -g bell-action other
set -g visual-activity off
set -g visual-bell off

# status bar [[[
set -g status on
set -g status-position bottom
set -g status-keys vi
set -g status-left-length 100
set -g status-right-length 150
set -g status-justify "left"
set -g status-style fg=default,bg=default

# colors and formatting
set -g status-interval 2
set -g status-left '#[fg=black,bg=green] #S #[fg=default,bg=default] '
set -g status-right '#[fg=colour245 push-default]#(tmux_stats_right)#[pop-default]'
# set -g status-right '#[fg=colour245 push-default]#(tmux_stats_right)#[pop-default]'
# ]]]

# ]]]

# window options [[[
set -wg mode-keys vi

# resize the pane if another client opens the same session
set -wg aggressive-resize on

# this can potentially use up a lot of cpu so keep an eye on it
# see: https://github.com/tmux/tmux/wiki/FAQ#tmux-uses-too-much-cpu-what-do-i-do
set -wg automatic-rename on
set -wg automatic-rename-format "#{?pane_in_mode,[tmux],}#{?pane_dead,[dead],}"

# monitoring: activity, bell
set -wg monitor-activity off
set -wg monitor-bell on

# pane style [[[
set -wg pane-base-index 0
set -wg pane-active-border-style bg=default,fg=green
set -wg pane-border-style bg=default,fg=colour245
set -wg pane-border-lines double
set -wg pane-border-status top
set -wg pane-border-format "\
#{?pane_active,#{?window_zoomed_flag,#[fg=orange push-default],#[fg=green push-default]},#[fg=colour245 push-default]} \
#{?pane_synchronized,#[bg=red#,fg=black][#P:SYN],[#P]} \
#[fg pop-default]\
#{?#{&&:#{!=:#{pane_title},#h},#{!=:#{pane_title},#H}},\
#{pane_title},\
#{pane_current_command} @ #(perl -pl0 -e \"s|^${HOME}|~|;s|([^/])[^/]*/|$\"\"1/|g\" <<<#{pane_current_path})} \
\
#[fg pop-default]"
# ]]]

# window style [[[
set -wg window-status-separator ' '
set -wg window-status-style fg=colour245,bg=default
set -wg window-status-current-style bg=cyan,fg=black
set -wg window-status-activity-style bg=red,fg=black
set -wg window-status-bell-style bg=red,fg=black
set -wg window-status-format '#{?window_zoomed_flag,#[bg=orange#,fg=black] + #[bg=default#,fg=default],}#{?window_zoomed_flag,#[bg=black#,fg=orange],} #I#{?#{!=:#W,},:#W,} '
set -wg window-status-current-format '#{?window_zoomed_flag,#[bg=orange#,fg=black] + #[bg=default#,fg=default],} #I#{?#{!=:#W,},:#W,} '
# ]]]

# ]]]

# pane options [[[

set -g allow-rename on
set -g alternate-screen on

# ]]]

# is this needed?
setw -g xterm-keys on

# set the pane title
# printf '\033]2;%s\033\\' 'title goes here'

# key bindings [[[

# splitting windows vertically or horizontally: like you are drawing a line
bind | split-window -h
bind - split-window -v
bind _ split-window -fv

# prevent accidental exits
bind q confirm kill-window

# vim style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane sync
bind S set-window-option synchronize-panes

# renaming
bind W command-prompt -p "Window Name:" "rename-window '%1'"
bind P command-prompt -p "Pane Name:" "select-pane -T %1"

# layout
bind = select-layout tiled
bind + resize-pane -Z

# window navigation: vimlike Shift-Alt-[hl] (without prefix key)
bind -T root M-L next-window
bind -T root M-H previous-window

# creating new windows/sessions
bind -T root M-T new-window
bind -T root M-N new-session

# reload tmux config
bind r source-file ~/.tmux.conf

# copy/paste behavior
unbind ]
unbind p
bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle \; send-keys -X begin-selection
bind -T copy-mode-vi 'y' send-keys -X copy-selection \; run "tmux save-buffer - | pbcopy"

# ]]]

# hooks [[[

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g after-new-session  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g after-new-window   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g after-kill-pane    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g pane-exited        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g after-split-window 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# change the pane border to orange on zoom
set-hook -g after-resize-pane   "if-shell 'tmux list-panes -F #F | grep -q Z' 'set pane-active-border-style fg=orange' 'set pane-active-border-style fg=green'"
set-hook -g after-select-pane   "if-shell 'tmux list-panes -F #F | grep -q Z' 'set pane-active-border-style fg=orange' 'set pane-active-border-style fg=green'"
set-hook -ga after-split-window "if-shell 'tmux list-panes -F #F | grep -q Z' 'set pane-active-border-style fg=orange' 'set pane-active-border-style fg=green'"
set-hook -ga pane-exited        "if-shell 'tmux list-panes -F #F | grep -q Z' 'set pane-active-border-style fg=orange' 'set pane-active-border-style fg=green'"

# ]]]

# select-pane -T "new title"
# #{=/-25/...:pane_current_path}
# display-message / display-popup
# idea: popup window for kube context and other shit
# display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < "send -X history-top" "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > "send -X history-bottom" '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "if -F \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}\" \"copy-mode -t=\" ; send -Xt= search-backward \"#{q:mouse_word}\"" "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y "copy-mode -q ; send-keys -l -- \"#{q:mouse_word}\"" "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c "copy-mode -q ; set-buffer -- \"#{q:mouse_word}\"" "#{?mouse_line,Copy Line,}" l "copy-mode -q ; set-buffer -- \"#{q:mouse_line}\"" '' "Horizontal Split" h "split-window -h" "Vertical Split" v "split-window -v" '' "#{?#{>:#{window_panes},1},,-}Swap Up" u "swap-pane -U" "#{?#{>:#{window_panes},1},,-}Swap Down" d "swap-pane -D" "#{?pane_marked_set,,-}Swap Marked" s swap-pane '' Kill X kill-pane Respawn R "respawn-pane -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"

# plugins [[[

# which to load
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'xamut/tmux-spotify'
set -g @plugin 'spywhere/tmux-now-playing'

# config
set -g @now-playing-status-format '{scrollable}'
set -g @now-playing-scrollable-threshold 20

# disable the keybinds
set -g @now-playing-play-pause-key ' '
set -g @now-playing-stop-key ' '
set -g @now-playing-previous-key ' '
set -g @now-playing-next-key ' '

# ]]]

run '~/.tmux/plugins/tpm/tpm'
